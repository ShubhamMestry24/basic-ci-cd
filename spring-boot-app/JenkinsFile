pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args "--user=1000:1000 -v /var/run/docker.sock:/var/run/docker.sock"
        }
    }

    environment {
        SONAR_URL = "http://host.docker.internal:9000" // Adjust if SonarQube is containerized
        DOCKER_IMAGE = "iamshubham24/ultimate-cicd:${BUILD_NUMBER}"
        GIT_REPO_NAME = "basic-ci-cd"
        GIT_USER_NAME = "shubhamMestry24"
    }

    stages {
        stage('Checkout') {
            steps {
                deleteDir()
                git branch: 'master', url: 'https://github.com/ShubhamMestry24/basic-ci-cd.git'
            }
        }

        stage('Build and Test') {
            steps {
                sh 'cd spring-boot-app && mvn clean package'
            }
        }

        stage('Static Code Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh 'cd spring-boot-app && mvn sonar:sonar "-Dsonar.login=$SONAR_AUTH_TOKEN" "-Dsonar.host.url=$SONAR_URL"'
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        cd spring-boot-app
                        docker login -u $DOCKER_USER -p $DOCKER_PASS
                        docker build -t $DOCKER_IMAGE .
                        docker push $DOCKER_IMAGE
                    '''
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config --global user.email "iamshubhammestry24@gmail.com"
                        git config --global user.name "$GIT_USER_NAME"
                        git clone https://$GITHUB_TOKEN@github.com/$GIT_USER_NAME/$GIT_REPO_NAME.git
                        cd $GIT_REPO_NAME
                        sed -i "s|image: .*|image: $DOCKER_IMAGE|" k8s/deployment.yaml
                        git add k8s/deployment.yaml
                        git commit -m "Update Docker image to $DOCKER_IMAGE"
                        git push origin master
                    '''
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
