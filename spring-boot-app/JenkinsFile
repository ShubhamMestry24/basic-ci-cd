pipeline{
    
    agent {
        docker{
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
        }
    }
    
    options{
        skipDefaultCheckout(true) // avoid Jenkins doing implicit checkout
    }

    stages{

        stage('Clean Targets'){
            steps{
                sh 'rm -rf spring-boot-app/target'
            }

        }
        /*stage('fix permission'){
            steps{
                sh 'sudo chown -R jenkins:jenkins $WORKSPACE'
                sh 'chmod -R 755 $WORKSPACE'
            }
        }*/

        /*stage('clean workspace'){
            steps{
                cleanWs()
                echo 'workspace cleaned'
            }
        }*/

        stage('checkout'){
            steps{
                echo 'checkout started'
                sh "whoami"
                git url: "https://github.com/ShubhamMestry24/basic-ci-cd.git", branch: "master"
                echo 'checkout passed'
            }
        }
        
        stage('Build'){
            steps{
                sh 'ls -ltr'
                echo "this is building the code"
                sh 'cd spring-boot-app && mvn clean package'
            }
        }
        
        stage('Build and Push Docker Image'){
            environment{
                DOCKER_IMAGE = "iamshubham24/ultimate-cicd:${BUILD_NUMBER}"
                // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
                REGISTRY_CREDENTIALS = credentials('docker-cred')
            }
            
            steps{
                script{
                    sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                        dockerImage.push()
                    }
                }
            }
        }
        
        stage('Update Deployment File'){
            environment{
                GIT_REPO_NAME = "basic-ci-cd"
                GIT_USER_NAME = "ShubhamMestry24"
            }
            
            steps{
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "iamshubhammestry24@gmail.com"
                        git config user.name "ShubhamMestry24"
                        BUILD_NUMBER=${BUILD_NUMBER}
                        echo "Current build number: ${BUILD_NUMBER}"

                        # Replace image tag in deployment YAML
                        sed -i "s|image: iamshubham24/ultimate-cicd:.*|image: iamshubham24/ultimate-cicd:${BUILD_NUMBER}|g" spring-boot-app-manifests/deployment.yml

                        # Verify sed worked
                        cat spring-boot-app-manifests/deployment.yml

                        # Stage only the YAML
                        git add spring-boot-app-manifests/deployment.yml

                        # Commit only if there are changes
                        git diff --cached --quiet || git commit -m "Update deployment image to version ${BUILD_NUMBER}"

                        # Push to master
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                    '''
                }
            }
        }
    }
}
